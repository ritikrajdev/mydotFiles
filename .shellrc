#!/bin/bash

# If not running interactively, don't do anything
[[ $- != *i* ]] && return

alias ls='ls --color=auto'

# Ranger Configuration 
alias rr=ranger
function ranger {
    local IFS=$'\t\n'
    local tempfile="$(mktemp -t tmp.XXXXXX)"
    local ranger_cmd=(
        command
        ranger
        --cmd="map Q chain shell echo %d > "$tempfile"; quitall"
    )
    
    ${ranger_cmd[@]} "$@"
    if [[ -f "$tempfile" ]] && [[ "$(cat -- "$tempfile")" != "$(echo -n `pwd`)" ]]; then
        cd -- "$(cat "$tempfile")" || return
    fi
    command rm -f -- "$tempfile" 2>/dev/null
}

# Local Bin Path !
export PATH="$PATH:/home/ritik/.local/bin"

# Path to doom
export PATH="$PATH:/home/ritik/.emacs.d/bin"

# Default Editor is nvim Now
export EDITOR=nvim
alias vim=nvim

# Grep Colorized Output
alias grep='grep --colour=auto'

# Github Starting ssh-agent for each shell, but only if one is not already running
if [[ ! "$SSH_AUTH_SOCK" ]]; then
        eval $(ssh-agent) > /dev/null
fi

# Kity view Image in Terminal using icat command
alias icat="kitty +kitten icat"

# Kitty Diff
alias kdiff="kitty +kitten diff"

# Actual Diff
alias diff="diff --color"

# Blur Background for Kitty and Yakuake {{{    
if [[ $(ps --no-header -p $PPID -o comm) =~ '^yakuake|kitty$' ]]; then    
        for wid in $(xdotool search --pid $PPID); do    
            xprop -f _KDE_NET_WM_BLUR_BEHIND_REGION 32c -set _KDE_NET_WM_BLUR_BEHIND_REGION 0 -id $wid; done    
fi
# }}}

# Alis for long listing format
alias ll="exa -lg"

# Alias for tree command
alias tree="exa --tree"

# Grep to RipGrep
alias grep="rg"

# Alias for man bat-extras-git
alias man="batman"

# Alias for valgrind
alias valgrindl='valgrind --track-origins=yes --leak-check=full --show-leak-kinds=all -s'

# Alias for g++
alias g++="g++ -std=c++14 -Wall"

# ex - archive extractor
# usage: ex <file>
ex ()
{
  if [ -f $1 ] ; then
    case $1 in
      *.tar.bz2)   tar xjf $1   ;;
      *.tar.gz)    tar xzf $1   ;;
      *.bz2)       bunzip2 $1   ;;
      *.rar)       unrar x $1   ;;
      *.gz)        gunzip $1    ;;
      *.tar)       tar xf $1    ;;
      *.tbz2)      tar xjf $1   ;;
      *.tgz)       tar xzf $1   ;;
      *.zip)       unzip $1     ;;
      *.Z)         uncompress $1;;
      *.7z)        7z x $1      ;;
      *)           echo "'$1' cannot be extracted via ex()" ;;
    esac
  else
    echo "'$1' is not a valid file"
  fi
}

# Skim Search (cd or open up a file)
skim()
{
	RESULT_DIR=$(sk)
	if [ -f $RESULT_DIR ]
	then
		xdg-open $RESULT_DIR
	elif [ -d $RESULT_DIR ]
	then
		cd $RESULT_DIR
	fi
}

# Advent of Code Template
adc ()
{
	AOC_FOLDER="$HOME/Documents/Code/Advent-Of-Code/"
	FOLDER_NAME="${AOC_FOLDER}December"
	FOLDER_NAME+=$1

	mkdir -p $FOLDER_NAME

	FOLDER_NAME+="/"

	touch ${FOLDER_NAME}test.txt ${FOLDER_NAME}input.txt
	cp ${AOC_FOLDER}.template-makefile ${FOLDER_NAME}Makefile
	cp ${AOC_FOLDER}.template-cpp.cpp ${FOLDER_NAME}part1.cpp
	cp ${AOC_FOLDER}.template-cpp.cpp ${FOLDER_NAME}part2.cpp

	echo Done
}

